<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1,">
  <link rel="icon" href="https://www.tip.edu.ph/assets/Uploads/TIP-INFORMAL-LOGO-04-2.png">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link rel="stylesheet" type="text/css" href="/css/style.css">
  <title>Dashboard | Office of Student Affairs</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chart.js">
  
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/pdfmake.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/vfs_fonts.js"></script>

<style>
  body {
      padding-top: 0;
      padding-bottom: 4rem;
    }

    .main-content {
      padding: 3px;
    }
  .content {
    background-color: #f4f4f4;
    padding-top: 8rem;
    padding-left: 3rem;
    padding-right: 3rem;    
  }

  .content h1{
    padding-bottom: 2rem;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  }
  .container {
      display: inline-flex;
      padding-bottom: 20px;
      padding-left: 0;

    }

    .left-column {
      flex: 1;
      padding: 10px;
      border-right: 1px solid #ccc;
    }

    .right-column {
      flex: 2;
      padding: 20px;
    }
    .scrollable-list {
      height: 550px; 
      overflow:auto;
      background-color: #444;
      padding: 10px;
      border: 1px solid #555;
    }

    .scrollable-list::-webkit-scrollbar {
      width: 5px; /* Adjust the width as needed */
    }

    .scrollable-list::-webkit-scrollbar-thumb {
      background-color: #666;
      border-radius: 10px;
    }

    .scrollable-list::-webkit-scrollbar-thumb:hover {
      background-color: #555;
    }

  .button {
    display: flex;
    gap: 5px;
  }
  .button:not(:last-child) {
    margin-bottom: 10px;
  }
  .button i {
    margin-top: 10px;
    color: #505050;
  }
  .graph-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 20px;
    margin-top: -10px;
    background-color: #f4f4f4;
  }
  .graph {
    border-radius: 5px;
    padding: 5px;
    background-color: white;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: auto;
    height: 250px;
    border-style: solid;
    border-width: thin;
  }
  .main-graph {
    padding-top: 30px;
    background-color: #f4f4f4;
    align-items: center;
    justify-content: center;
    border-radius: 10px;
    height: 500px;
  }
  .graph-grid h5 {
    font-size: 18px;
    background-color: #f4f4f4;
  }
  .content footer {
    padding-bottom: 3rem;
    background-color: #f4f4f4;
  }
  .item-summary {
  display: flex;
  justify-content: space-around;
  background-color: grey;
  border-radius: 50px 50px 0px 0px;
  padding: 10px;
}

.summary-item {
  text-align: center;
  color: #fff;
}

.summary-value {
  font-size: 24px;
  font-weight: bold;
}

.summary-label {
  font-size: 16px;
  margin-top: 10px;
}
.list-group-item {
      background-color: #555;
      border: 1px solid #666;
      margin-bottom: 10px;
      color: #fff;
}

.list-group-item strong {
  color: #fff;
}
    .tag-lost {
      background-color: #e74c3c; /* Red for lost items */
    }

    .tag-found {
      background-color: #2ecc71; /* Green for found items */
    }
</style>
</head>

<body>
  <%- include('admin-navbar') %>
  <div class="content">
    <div class="main-content">
      <h1 class="text-dark">Dashboard</h1>
      <div class="item-summary">
        <div class="summary-item">
          <span class="summary-value" id="totalItems"><%= totalItems %></span>
          <span class="summary-label">Total Items</span>
        </div>
        <div class="summary-item">
          <span class="summary-value" id="foundItems"><%= foundItems %></span>
          <span class="summary-label">Found Items</span>
        </div>
        <div class="summary-item">
          <span class="summary-value" id="lostItems"><%= lostItems %></span>
          <span class="summary-label">Lost Items</span>
        </div>
        <div class="summary-item">
          <span class="summary-value" id="totalUsers"><%= totalUsers %></span>
          <span class="summary-label">Total Users</span>
        </div>
        <div class="summary-item">
          <button id="generateReportButton" class="btn btn-warning">Generate Report</button>
        </div>
      </div>
      <div class="main-graph">
        <div class="graph-grid">
          <center>
            <h5>Category with Highest and Lowest Reported Lost Items</h5>
            <div class="graph">
              <canvas id="barChart"></canvas>
            </div>
          </center>
          <center>
            <h5>Category with Highest and Lowest Reported Found Items</h5>
            <div class="graph">
              <canvas id="barChartFound"></canvas>
            </div>
          </center>  
          <center>
            <h5>Pending vs. Claimed Items</h5>
            <div class="graph">
                <canvas id="pieChart"></canvas>
            </div>
          </center>
          <center>
            <h5>Department with highest lost and found Items</h5>
            <div class="graph">
              <canvas id="departmentChart"></canvas>
            </div>
          </center>
        </div>
        <br>
        <hr>
        <div class="container">
          <div class="left-column">
            <h2 style="font-weight: bolder;">History</h2>
            <div class="scrollable-list">
              <ul class="list-group">
                <% 
                  let combinedItems = [];
                  if (data.lost && data.lost.length > 0) {
                    combinedItems = combinedItems.concat(data.lost.map(item => ({ ...item, type: 'Lost' })));
                  }
                  if (data.found && data.found.length > 0) {
                    combinedItems = combinedItems.concat(data.found.map(item => ({ ...item, type: 'Found' })));
                  }
                  
                  combinedItems.sort((a, b) => new Date(b.datetime) - new Date(a.datetime));
                  
                  combinedItems.forEach(item => { %>
                    <li class="list-group-item">
                      <div class="tag-<%= item.type.toLowerCase() %>">  
                        <center><strong><%= item.type %> Item</strong></center>
                      </div>
                      <strong>Item Name:</strong> <%= item.objTitle %><br>
                      <strong>Category:</strong> <%= item.category %><br>
                      <strong>Date Found:</strong> <%= item.datetime %><br>
                      <strong>Department:</strong> <%= item.department %><br>
                      <strong>Reported By:</strong> <%= item.firstName %><br>
                      <strong>Retrieved By:</strong> <%= item.retrievedBy %><br>
                      <strong>Date Retrieved:</strong> <%= item.retrieveDate %><br>
                    </li>
                  <% }); 
                %>
              </ul>
            </div>
          </div>
          <div class="right-column">
              <center>
                <h5>Weekly Lost and Found Items</h5>
                <div class="graph">
                    <canvas id="lineChart"></canvas>
                </div>
              </center>
              <br>
              <center>
                <h5>Monthly Lost and Found Items</h5>
                <div class="graph">
                    <canvas id="lineChartMonthly"></canvas>
                </div>
              </center>
          </div>
        </div>
        <%- include('../footer') %>
      </div>
    </div>
  </div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    var categories = <%- JSON.stringify(categories) %>;
    var lostCounts = <%- JSON.stringify(lostCounts) %>;
      
    var barData = {
      labels: categories,
      datasets: [{
        data: lostCounts,
        backgroundColor: ['#3498db', 'pink', '#2ecc71', '#9b59b6', 'grey', 'brown', 'orange'],
      }]
    };
      
    var barChart = new Chart(document.getElementById('barChart'), {
      type: 'bar',
      data: barData,
    });

    var barChartFoundData = <%- JSON.stringify(barChartFoundData) %>;

    var barChartFound = new Chart(document.getElementById('barChartFound'), {
      type: 'bar',
      data: barChartFoundData,
    });

    var weeklyData = <%- JSON.stringify(weeklyChartData) %>;
    var dates = weeklyData.map(item => item.date);
    var lostData = weeklyData.map(item => item.lost);
    var foundData = weeklyData.map(item => item.found);

    var lineData = {
      labels: dates,
      datasets: [
        {
          label: 'Lost Items',
          borderColor: '#e74c3c',
          data: lostData,
        },
        {
          label: 'Found Items',
          borderColor: '#2ecc71',
          data: foundData,
        },
      ],
    };

    var lineChart = new Chart(document.getElementById('lineChart'), {
      type: 'line',
      data: lineData,
    });

    var monthlyData = <%- JSON.stringify(monthlyChartData) %>;
    var monthlyMonths = monthlyData.map(item => item.month);
    var monthlyLostData = monthlyData.map(item => item.lost);
    var monthlyFoundData = monthlyData.map(item => item.found);

    var lineChartMonthlyData = {
      labels: monthlyMonths,
      datasets: [
        {
          label: 'Lost Items',
          borderColor: '#e74c3c',
          data: monthlyLostData,
        },
        {
          label: 'Found Items',
          borderColor: '#2ecc71',
          data: monthlyFoundData,
        },
      ],
    };

    var lineChartMonthly = new Chart(document.getElementById('lineChartMonthly'), {
      type: 'line',
      data: lineChartMonthlyData,
    });

    var totalPendingItems = <%= totalPendingItems %>;
    var totalClaimedItems = <%= totalClaimedItems %>;

      var pieData = {
        labels: ['Pending Items', 'Claimed Items'],
        datasets: [{
          data: [totalPendingItems, totalClaimedItems],
          backgroundColor: ['orange', '#2ecc71']
        }]
      };

      var pieChart = new Chart(document.getElementById('pieChart'), {
        type: 'doughnut',
        data: pieData
      });

      var combinedDepartments = <%- JSON.stringify(combinedDepartments) %>;
        var departmentData = {
            labels: Object.keys(combinedDepartments),
            datasets: [{
                label: 'Lost Items',
                data: Object.values(combinedDepartments).map(data => data.lost || 0),
                backgroundColor: '#e74c3c',
            }, {
                label: 'Found Items',
                data: Object.values(combinedDepartments).map(data => data.found || 0),
                backgroundColor: '#2ecc71',
            }]
        };

        var departmentChart = new Chart(document.getElementById('departmentChart'), {
            type: 'bar',
            data: departmentData,
            options: {
              indexAxis: 'y',
                scales: {
                    x: {
                        beginAtZero: true,
                    },
                    y: {
                        beginAtZero: true,
                    },
                },
            },
        });
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Define combinedItems in the scope where it's accessible
    let combinedItems = []; // Replace this with your data
    const totalItems = document.getElementById("totalItems").textContent;
const foundItems = document.getElementById("foundItems").textContent;
const lostItems = document.getElementById("lostItems").textContent;

  
    document.getElementById("generateReportButton").addEventListener("click", function () {
      const docDefinition = {
        content: [
          "Report from the Office of Student Affairs",
          "----------------------------------------",
          `Total Items: ${totalItems}`,
          `Found Items: ${foundItems}`,
          `Lost Items: ${lostItems}`,
          "History:",
          "----------",
        ],
      };
  
      combinedItems.forEach((item) => {
        docDefinition.content.push(
          {
            text: "Item Type: " + item.type,
            style: "subheader",
          },
          "Item Name: " + item.objTitle,
          "Category: " + item.category,
          "Date Found: " + item.datetime,
          "Department: " + item.department,
          "Reported By: " + item.firstName,
          "Retrieved By: " + item.retrievedBy,
          "Date Retrieved: " + item.retrieveDate,
          {
            text: "-------------------------",
            style: "subheader",
          }
        );
      });
  
      pdfMake.createPdf(docDefinition).download("report.pdf");
    });
  });
  
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
</body>
</html>
